     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll    
     7                                  
     8                                  segment data use32 class=data
     9 00000000 01                          a db 1
    10 00000001 0200                        b dw 2
    11 00000003 03000000                    c dd 3
    12 00000007 0400000000000000            d dq 4
    13 0000000F 0000000000000000            r dq 0
    14                                      
    15                                  segment code use32 class=code
    16                                      start:
    17                                          ; (c-b+a)-(d+a) 
    18 00000000 A1[03000000]                    mov eax, [c]            ; ecx = c
    19 00000005 BB00000000                      mov ebx, 0
    20 0000000A 668B1D[01000000]                mov bx, [b]             ; ebx = b
    21 00000011 29D8                            sub eax, ebx            ; eax = b - c
    22 00000013 BB00000000                      mov ebx, 0
    23 00000018 8A1D[00000000]                  mov bl, [a]             ; ebx = a
    24 0000001E 01D8                            add eax, ebx            ; eax = b - c + a
    25                                          
    26 00000020 89C3                            mov ebx, eax            ; ebx = b - c + a
    27                                          
    28 00000022 A1[07000000]                    mov eax, dword [d]
    29 00000027 8B15[0B000000]                  mov edx, dword [d+4]    ; edx:eax = d
    30                                          
    31 0000002D 0205[00000000]                  add al, [a]
    32 00000033 80D400                          adc ah, 0               ; edx:eax = d + a
    33                                          
    34 00000036 B900000000                      mov ecx, 0
    35 0000003B 29C3                            sub ebx, eax
    36 0000003D 19D1                            sbb ecx, edx            ; ecx:ebx = (c - b + a) - (d + a) = (3 - 2 + 1) - (4 + 1)
    37                                          
    38 0000003F 891D[0F000000]                  mov dword [r], ebx
    39 00000045 890D[13000000]                  mov dword [r+4], ecx    ; r = (c - b + a) - (d + a) = -3 =  = FF FF FF FF FF FF FF FDh
    40                                          
    41                                          
    42                                          ; exit(0)
    43 0000004B 6A00                            push dword 0
    44 0000004D FF15[00000000]                  call [exit]
