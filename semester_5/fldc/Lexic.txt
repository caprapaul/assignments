Alphabet:
  a. Upper (A-Z) and lower case letters (a-z) of the English alphabet
  b. Underline character '_';
  c. Decimal digits (0-9);

1. Lexic:
  a.Special symbols, representing:
  - operators + - * / = < <= == != >= > && || !
  - separators [ ] { } : ; space
  - reserved words:
    let const
    char i32 bool
    if else while
    print read

  b.identifiers -a sequence of letters and digits, such that the first character is a letter; the rule is:
    identifier ::= (letter | "_") {letter | digit | "_"}
    letter ::= "A" | "B" | ... | "Z" | "a" | "b" | ... | "z"
    digit ::= "0" | "1" | ... | "9"

  c.constants
    1.integer:
      const_int ::= [("+" | "-")] const_uint
      const_uint ::= digit {digit}

    2.character:
      const_char ::= "'" char "'"
      char ::= letter | digit | symbol
      symbol ::= " " | "_"

    3.string
      const_string ::= '"' string '"'
      string ::= {char}

    4.boolean
      const_bool ::= "true" | "false"